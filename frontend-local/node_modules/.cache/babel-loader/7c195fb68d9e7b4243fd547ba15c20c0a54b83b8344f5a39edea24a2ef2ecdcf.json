{"ast":null,"code":"var _jsxFileName = \"/Users/basakonder/Desktop/automl/frontend-react/src/components/AutoMLPipeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from './AutoMLPipeline.module.css';\nimport Leaderboard from './Leaderboard';\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoMLPipeline = () => {\n  _s();\n  const [trainFile, setTrainFile] = useState(null);\n  const [trainFileLabel, setTrainFileLabel] = useState(\"Choose file\");\n  const [predictFile, setPredictFile] = useState(null);\n  const [predictFileLabel, setPredictFileLabel] = useState(\"Choose file\");\n  const [targetString, setTargetString] = useState(\"\");\n  const [maxRuntimeSecs, setMaxRuntimeSecs] = useState(\"\");\n  const [maxModels, setMaxModels] = useState(\"\");\n  const [nfolds, setNfolds] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const [selectedAlgos, setSelectedAlgos] = useState([]);\n  const [leaderboardData, setLeaderboardData] = useState(null);\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [mode, setMode] = useState(\"user\");\n  const [trainLoading, setTrainLoading] = useState(false);\n  const [predictLoading, setpredictLoading] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [columnNames, setColumnNames] = useState([]);\n  const handleModeChange = e => {\n    setMode(e.target.value);\n  };\n  const handleTrainFileChange = e => {\n    setTrainFile(e.target.files[0]);\n    setTrainFileLabel(e.target.files[0].name);\n  };\n  const handlePredictFileChange = e => {\n    setPredictFile(e.target.files[0]);\n    setPredictFileLabel(e.target.files[0].name);\n  };\n  const handleTargetStringChange = e => {\n    setTargetString(e.target.value);\n  };\n  const handleMaxRuntimeSecsChange = e => {\n    setMaxRuntimeSecs(e.target.value);\n  };\n  const handleMaxModelsChange = e => {\n    setMaxModels(e.target.value);\n  };\n  const handleNfoldsChange = e => {\n    setNfolds(e.target.value);\n  };\n  const handleSeedChange = e => {\n    setSeed(e.target.value);\n  };\n  const handleAlgoSelectChange = e => {\n    const options = e.target.options;\n    const selected = [];\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        selected.push(options[i].value);\n      }\n    }\n    setSelectedAlgos(selected);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setTrainLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", trainFile);\n    formData.append(\"target_string\", targetString);\n    if (maxRuntimeSecs) formData.append(\"max_runtime_secs\", maxRuntimeSecs);\n    if (maxModels) formData.append(\"max_models\", maxModels);\n    if (nfolds) formData.append(\"nfolds\", nfolds);\n    if (seed) formData.append(\"seed\", seed);\n    if (selectedAlgos.length != 0) formData.append(\"include_algos\", JSON.stringify(selectedAlgos));\n    const response = await fetch(\"http://localhost:8000/train\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n    const parsedData = JSON.parse(data);\n    const parsedJsonData = Object.keys(JSON.parse(data).model_id).map(key => {\n      const model = {};\n      for (const prop in JSON.parse(data)) {\n        model[prop] = JSON.parse(data)[prop][key];\n      }\n      return model;\n    });\n    setLeaderboardData(parsedJsonData);\n    setTrainLoading(false);\n  };\n  const handlePredictSubmit = async e => {\n    e.preventDefault();\n    setpredictLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", predictFile);\n    const response = await fetch(\"http://localhost:8000/predict\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n    setpredictLoading(false);\n    // Process the prediction data as desired\n  };\n\n  const saveSelectedModels = async () => {\n    setSaveLoading(true);\n    const response = await fetch(\"http://localhost:8000/save_models\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(selectedModels)\n    });\n    if (response.ok) {\n      console.log(\"Selected models saved successfully\");\n      alert(\"Selected models are saved successfully\");\n      setLeaderboardData(null);\n      setSelectedModels([]);\n    } else {\n      console.error(\"Error saving selected models\");\n    }\n    setSaveLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.AutoMLPipeline__container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modeSelector,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mode\",\n        children: \"Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"mode\",\n        value: mode,\n        onChange: handleModeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"developer\",\n          children: \"Developer Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.trainSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Train\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"trainFile\",\n          children: trainFileLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"trainFile\",\n          name: \"trainFile\",\n          onChange: e => handleTrainFileChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"targetString\",\n          children: columnNames.length > 0 ? \"Select the target column\" : \"Upload your train.csv file first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), columnNames.length > 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"targetString\",\n          name: \"targetString\",\n          value: targetString,\n          onChange: e => handleTargetStringChange(e),\n          children: columnNames.map(columnName => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: columnName,\n            children: columnName\n          }, columnName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 3\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"targetString\",\n          name: \"targetString\",\n          value: targetString,\n          onChange: e => handleTargetStringChange(e),\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 3\n        }, this), mode === \"developer\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"maxRuntimeSecs\",\n            children: \"Max Runtime Secs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Default is 3600\",\n            type: \"number\",\n            id: \"maxRuntimeSecs\",\n            name: \"maxRuntimeSecs\",\n            value: maxRuntimeSecs,\n            onChange: e => handleMaxRuntimeSecsChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"maxModels\",\n            children: \"Max Models \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Default is None\",\n            type: \"number\",\n            id: \"maxModels\",\n            name: \"maxModels\",\n            value: maxModels,\n            onChange: e => handleMaxModelsChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nfolds\",\n            children: \"Nfolds \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Default is -1\",\n            type: \"number\",\n            id: \"nfolds\",\n            name: \"nfolds\",\n            value: nfolds,\n            onChange: e => handleNfoldsChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"seed\",\n            children: \"Seed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Default is None\",\n            type: \"number\",\n            id: \"seed\",\n            name: \"seed\",\n            value: seed,\n            onChange: e => handleSeedChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"algos\",\n            children: \"Algorithms \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            name: \"algos\",\n            id: \"algos\",\n            onChange: handleAlgoSelectChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"GLM\",\n              children: \"GLM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DeepLearning\",\n              children: \"DeepLearning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DRF\",\n              children: \"DRF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"GBM\",\n              children: \"GBM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"XGBoost\",\n              children: \"XGBoost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"StackedEnsemble\",\n              children: \"StackedEnsemble\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Train\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), trainLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSection,\n        children: /*#__PURE__*/_jsxDEV(PacmanLoader, {\n          color: \"#4A90E2\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), leaderboardData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leaderboardContainer,\n      children: [/*#__PURE__*/_jsxDEV(Leaderboard, {\n        data: leaderboardData,\n        selectedModels: selectedModels,\n        setSelectedModels: setSelectedModels,\n        onSave: saveSelectedModels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), saveLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSection,\n        children: /*#__PURE__*/_jsxDEV(RingLoader, {\n          color: \"#4A90E2\",\n          size: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.predictSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePredictSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"predictFile\",\n          children: predictFileLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"predictFile\",\n          name: \"predictFile\",\n          onChange: e => handlePredictFileChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), predictLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSection,\n        children: /*#__PURE__*/_jsxDEV(PropagateLoader, {\n          color: \"#4A90E2\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoMLPipeline, \"vp/cxVS++iYba2wpahF/4KVrbqc=\");\n_c = AutoMLPipeline;\nexport default AutoMLPipeline;\nvar _c;\n$RefreshReg$(_c, \"AutoMLPipeline\");","map":{"version":3,"names":["React","useState","styles","Leaderboard","PacmanLoader","PropagateLoader","RingLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","AutoMLPipeline","_s","trainFile","setTrainFile","trainFileLabel","setTrainFileLabel","predictFile","setPredictFile","predictFileLabel","setPredictFileLabel","targetString","setTargetString","maxRuntimeSecs","setMaxRuntimeSecs","maxModels","setMaxModels","nfolds","setNfolds","seed","setSeed","selectedAlgos","setSelectedAlgos","leaderboardData","setLeaderboardData","selectedModels","setSelectedModels","mode","setMode","trainLoading","setTrainLoading","predictLoading","setpredictLoading","saveLoading","setSaveLoading","columnNames","setColumnNames","handleModeChange","e","target","value","handleTrainFileChange","files","name","handlePredictFileChange","handleTargetStringChange","handleMaxRuntimeSecsChange","handleMaxModelsChange","handleNfoldsChange","handleSeedChange","handleAlgoSelectChange","options","selected","i","length","push","handleSubmit","preventDefault","formData","FormData","append","JSON","stringify","response","fetch","method","body","data","json","parsedData","parse","parsedJsonData","Object","keys","model_id","map","key","model","prop","handlePredictSubmit","saveSelectedModels","headers","ok","console","log","alert","error","className","AutoMLPipeline__container","children","modeSelector","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","trainSection","onSubmit","type","columnName","disabled","placeholder","multiple","loadingSection","color","size","leaderboardContainer","onSave","predictSection","_c","$RefreshReg$"],"sources":["/Users/basakonder/Desktop/automl/frontend-react/src/components/AutoMLPipeline.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from './AutoMLPipeline.module.css';\nimport Leaderboard from './Leaderboard';\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\nimport RingLoader from \"react-spinners/RingLoader\";\n\nconst AutoMLPipeline = () => {\n  const [trainFile, setTrainFile] = useState(null);\n  const [trainFileLabel, setTrainFileLabel] = useState(\"Choose file\");\n  const [predictFile, setPredictFile] = useState(null);\n  const [predictFileLabel, setPredictFileLabel] = useState(\"Choose file\");\n  const [targetString, setTargetString] = useState(\"\");\n  const [maxRuntimeSecs, setMaxRuntimeSecs] = useState(\"\");\n  const [maxModels, setMaxModels] = useState(\"\");\n  const [nfolds, setNfolds] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const [selectedAlgos, setSelectedAlgos] = useState([]);\n  const [leaderboardData, setLeaderboardData] = useState(null);\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [mode, setMode] = useState(\"user\");\n  const [trainLoading, setTrainLoading] = useState(false);\n  const [predictLoading, setpredictLoading] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [columnNames, setColumnNames] = useState([]);\n\n\n  const handleModeChange = (e) => {\n    setMode(e.target.value);\n  };\n\n  const handleTrainFileChange = (e) => {\n    setTrainFile(e.target.files[0]);\n    setTrainFileLabel(e.target.files[0].name);\n  };\n\n  const handlePredictFileChange = (e) => {\n    setPredictFile(e.target.files[0]);\n    setPredictFileLabel(e.target.files[0].name);\n  };\n\n  const handleTargetStringChange = (e) => {\n    setTargetString(e.target.value);\n  };\n\n  const handleMaxRuntimeSecsChange = (e) => {\n    setMaxRuntimeSecs(e.target.value);\n  };\n\n  const handleMaxModelsChange = (e) => {\n    setMaxModels(e.target.value);\n  };\n\n  const handleNfoldsChange = (e) => {\n    setNfolds(e.target.value);\n  };\n\n  const handleSeedChange = (e) => {\n    setSeed(e.target.value);\n  };\n\n  const handleAlgoSelectChange = (e) => {\n    const options = e.target.options;\n    const selected = [];\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        selected.push(options[i].value);\n      }\n    }\n    setSelectedAlgos(selected);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setTrainLoading(true);\n\n    const formData = new FormData();\n    formData.append(\"file\", trainFile);\n    formData.append(\"target_string\", targetString);\n    if (maxRuntimeSecs) formData.append(\"max_runtime_secs\", maxRuntimeSecs);\n    if (maxModels) formData.append(\"max_models\", maxModels);\n    if (nfolds) formData.append(\"nfolds\", nfolds);\n    if (seed) formData.append(\"seed\", seed);\n    if (selectedAlgos.length != 0) formData.append(\"include_algos\", JSON.stringify(selectedAlgos));\n\n    const response = await fetch(\"http://localhost:8000/train\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const data = await response.json();\n    const parsedData = JSON.parse(data);\n    const parsedJsonData = Object.keys(JSON.parse(data).model_id).map((key) => {\n      const model = {};\n      for (const prop in JSON.parse(data)) {\n        model[prop] = JSON.parse(data)[prop][key];\n      }\n      return model;\n    });\n    \n    setLeaderboardData(parsedJsonData);    \n    setTrainLoading(false);\n  };\n\n  const handlePredictSubmit = async (e) => {\n    e.preventDefault();\n    setpredictLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", predictFile);\n\n    const response = await fetch(\"http://localhost:8000/predict\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const data = await response.json();\n    setpredictLoading(false);\n    // Process the prediction data as desired\n  };\n\n  const saveSelectedModels = async () => {\n    setSaveLoading(true);\n    const response = await fetch(\"http://localhost:8000/save_models\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(selectedModels),\n    });\n\n    if (response.ok) {\n      console.log(\"Selected models saved successfully\");\n      alert(\"Selected models are saved successfully\");\n      setLeaderboardData(null);\n      setSelectedModels([]);\n    } else {\n      console.error(\"Error saving selected models\");\n    }\n    setSaveLoading(false);\n  };\n  return (\n    <div className={styles.AutoMLPipeline__container}>\n      <div className={styles.modeSelector}>\n        <label htmlFor=\"mode\">Mode:</label>\n        <select id=\"mode\" value={mode} onChange={handleModeChange}>\n          <option value=\"user\">User Mode</option>\n          <option value=\"developer\">Developer Mode</option>\n        </select>\n      </div>\n\n      <div className={styles.trainSection}>\n      <h2>Train</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"trainFile\">{trainFileLabel}</label>\n        <input\n          type=\"file\"\n          id=\"trainFile\"\n          name=\"trainFile\"\n          onChange={(e) => handleTrainFileChange          (e)}\n          />\n          <label htmlFor=\"targetString\">\n            {columnNames.length > 0\n              ? \"Select the target column\"\n              : \"Upload your train.csv file first\"}\n          </label>\n          {columnNames.length > 0 ? (\n  <select\n    id=\"targetString\"\n    name=\"targetString\"\n    value={targetString}\n    onChange={(e) => handleTargetStringChange(e)}\n  >\n    {columnNames.map((columnName) => (\n      <option key={columnName} value={columnName}>\n        {columnName}\n      </option>\n    ))}\n  </select>\n) : (\n  <input\n    type=\"text\"\n    id=\"targetString\"\n    name=\"targetString\"\n    value={targetString}\n    onChange={(e) => handleTargetStringChange(e)}\n    disabled\n  />\n)}\n          {mode === \"developer\" && (\n            <>            \n            <br></br>\n            <br></br>\n            <label htmlFor=\"maxRuntimeSecs\">Max Runtime Secs</label>\n            <input\n            placeholder=\"Default is 3600\"\n            type=\"number\"\n            id=\"maxRuntimeSecs\"\n            name=\"maxRuntimeSecs\"\n            value={maxRuntimeSecs}\n            onChange={(e) => handleMaxRuntimeSecsChange(e)}\n            />\n            <br></br>\n            <label htmlFor=\"maxModels\">Max Models </label>\n            <input\n              placeholder=\"Default is None\"\n              type=\"number\"\n              id=\"maxModels\"\n              name=\"maxModels\"\n              value={maxModels}\n              onChange={(e) => handleMaxModelsChange(e)}\n            />\n            <br></br>\n            <label htmlFor=\"nfolds\">Nfolds </label>\n            <input\n              placeholder=\"Default is -1\"\n              type=\"number\"\n              id=\"nfolds\"\n              name=\"nfolds\"\n              value={nfolds}\n              onChange={(e) => handleNfoldsChange(e)}\n            />\n            <br></br>\n            <label htmlFor=\"seed\">Seed </label>\n            <input\n              placeholder=\"Default is None\"\n              type=\"number\"\n              id=\"seed\"\n              name=\"seed\"\n              value={seed}\n              onChange={(e) => handleSeedChange(e)}\n            />\n            <br></br>\n            <label htmlFor=\"algos\">Algorithms </label>\n            <select multiple name=\"algos\" id=\"algos\" onChange={handleAlgoSelectChange}>\n              <option value=\"GLM\">GLM</option>\n              <option value=\"DeepLearning\">DeepLearning</option>\n              <option value=\"DRF\">DRF</option>\n              <option value=\"GBM\">GBM</option>\n              <option value=\"XGBoost\">XGBoost</option>\n              <option value=\"StackedEnsemble\">StackedEnsemble</option>\n            </select>\n            <br></br>\n            </>\n          )}\n          <button type=\"submit\">Train</button>\n        </form>\n        {trainLoading && (\n        <div className={styles.loadingSection}>\n          <PacmanLoader color=\"#4A90E2\" size={50} />\n        </div>\n      )}\n      </div>\n\n      {leaderboardData && (\n        <div className={styles.leaderboardContainer}>\n          <Leaderboard\n            data={leaderboardData}\n            selectedModels={selectedModels}\n            setSelectedModels={setSelectedModels}\n            onSave={saveSelectedModels}\n          />\n        {saveLoading && (\n        <div className={styles.loadingSection}>\n          <RingLoader color=\"#4A90E2\" size={100} />\n        </div>\n      )}\n        </div>\n      )}\n\n      <div className={styles.predictSection}>\n        <h2>Predict</h2>\n        <form onSubmit={handlePredictSubmit}>\n          <label htmlFor=\"predictFile\">{predictFileLabel}</label>\n          <input\n            type=\"file\"\n            id=\"predictFile\"\n            name=\"predictFile\"\n            onChange={(e) => handlePredictFileChange(e)}\n          />\n          <button type=\"submit\">Predict</button>\n        </form>\n        {predictLoading && (\n        <div className={styles.loadingSection}>\n          <PropagateLoader color=\"#4A90E2\" size={50} />\n        </div>\n      )}\n      </div>\n    </div>\n  );\n};\n\nexport default AutoMLPipeline;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}