{"ast":null,"code":"var _jsxFileName = \"/Users/basakonder/Desktop/automl/frontend-react/src/components/AutoMLPipeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from './AutoMLPipeline.module.css';\nimport Leaderboard from './Leaderboard';\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoMLPipeline = () => {\n  _s();\n  const [trainFile, setTrainFile] = useState(null);\n  const [trainFileLabel, setTrainFileLabel] = useState(\"Choose file\");\n  const [predictFile, setPredictFile] = useState(null);\n  const [predictFileLabel, setPredictFileLabel] = useState(\"Choose file\");\n  const [targetString, setTargetString] = useState(\"\");\n  const [maxRuntimeSecs, setMaxRuntimeSecs] = useState(\"\");\n  const [maxModels, setMaxModels] = useState(\"\");\n  const [nfolds, setNfolds] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const [selectedAlgos, setSelectedAlgos] = useState([]);\n  const [leaderboardData, setLeaderboardData] = useState(null);\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [mode, setMode] = useState(\"user\");\n  const [trainLoading, setTrainLoading] = useState(false);\n  const [predictLoading, setpredictLoading] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [columnNames, setColumnNames] = useState([]);\n  const [columnInsights, setColumnInsights] = useState([]);\n  const analyzeColumns = data => {\n    const insights = data.reduce((acc, row) => {\n      Object.entries(row).forEach(_ref => {\n        let [key, value] = _ref;\n        if (!acc[key]) {\n          acc[key] = {\n            type: null,\n            unique_values: new Set(),\n            null_count: 0,\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY,\n            sum: 0\n          };\n        }\n        if (value === \"\" || value === null) {\n          acc[key].null_count += 1;\n        } else {\n          if (!isNaN(value)) {\n            const numValue = Number(value);\n            acc[key].min = Math.min(acc[key].min, numValue);\n            acc[key].max = Math.max(acc[key].max, numValue);\n            acc[key].sum += numValue;\n          }\n          acc[key].unique_values.add(value);\n        }\n      });\n      return acc;\n    }, {});\n    const result = Object.entries(insights).map(_ref2 => {\n      let [name, data] = _ref2;\n      return {\n        name,\n        type: isNaN(Array.from(data.unique_values)[0]) ? \"string\" : \"number\",\n        unique_values: data.unique_values.size,\n        null_count: data.null_count,\n        min: data.min === Number.POSITIVE_INFINITY ? null : data.min,\n        max: data.max === Number.NEGATIVE_INFINITY ? null : data.max,\n        mean: data.sum / (data.unique_values.size - data.null_count)\n      };\n    });\n    setColumnInsights(result);\n  };\n  const handleModeChange = e => {\n    setMode(e.target.value);\n  };\n  const handleTrainFileChange = e => {\n    setTrainFile(e.target.files[0]);\n    setTrainFileLabel(e.target.files[0].name);\n    const fileReader = new FileReader();\n    fileReader.onload = async event => {\n      const fileContent = event.target.result;\n\n      // Extract the column names\n      const parsedData = Papa.parse(fileContent, {\n        header: true\n      });\n      const firstLine = fileContent.split(\"\\n\")[0];\n      const columns = firstLine.split(\",\");\n\n      // Update the column names state\n      setColumnNames(columns);\n      analyzeColumns(parsedData.data);\n    };\n    fileReader.readAsText(e.target.files[0]);\n  };\n  const handlePredictFileChange = e => {\n    setPredictFile(e.target.files[0]);\n    setPredictFileLabel(e.target.files[0].name);\n  };\n  const handleTargetStringChange = e => {\n    setTargetString(e.target.value);\n  };\n  const handleMaxRuntimeSecsChange = e => {\n    setMaxRuntimeSecs(e.target.value);\n  };\n  const handleMaxModelsChange = e => {\n    setMaxModels(e.target.value);\n  };\n  const handleNfoldsChange = e => {\n    setNfolds(e.target.value);\n  };\n  const handleSeedChange = e => {\n    setSeed(e.target.value);\n  };\n  const handleAlgoSelectChange = e => {\n    const options = e.target.options;\n    const selected = [];\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        selected.push(options[i].value);\n      }\n    }\n    setSelectedAlgos(selected);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setTrainLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", trainFile);\n    formData.append(\"target_string\", targetString);\n    if (maxRuntimeSecs) formData.append(\"max_runtime_secs\", maxRuntimeSecs);\n    if (maxModels) formData.append(\"max_models\", maxModels);\n    if (nfolds) formData.append(\"nfolds\", nfolds);\n    if (seed) formData.append(\"seed\", seed);\n    if (selectedAlgos.length != 0) formData.append(\"include_algos\", JSON.stringify(selectedAlgos));\n    const response = await fetch(\"http://localhost:8000/train\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n    const parsedData = JSON.parse(data);\n    const parsedJsonData = Object.keys(JSON.parse(data).model_id).map(key => {\n      const model = {};\n      for (const prop in JSON.parse(data)) {\n        model[prop] = JSON.parse(data)[prop][key];\n      }\n      return model;\n    });\n    setLeaderboardData(parsedJsonData);\n    setTrainLoading(false);\n  };\n  const handlePredictSubmit = async e => {\n    e.preventDefault();\n    setpredictLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", predictFile);\n    const response = await fetch(\"http://localhost:8000/predict\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n    setpredictLoading(false);\n    // Process the prediction data as desired\n  };\n\n  const saveSelectedModels = async () => {\n    setSaveLoading(true);\n    const response = await fetch(\"http://localhost:8000/save_models\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(selectedModels)\n    });\n    if (response.ok) {\n      console.log(\"Selected models saved successfully\");\n      alert(\"Selected models are saved successfully\");\n      setLeaderboardData(null);\n      setSelectedModels([]);\n    } else {\n      console.error(\"Error saving selected models\");\n    }\n    setSaveLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.AutoMLPipeline__container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modeSelector,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mode\",\n        children: \"Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"mode\",\n        value: mode,\n        onChange: handleModeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"developer\",\n          children: \"Developer Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.trainSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Train\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"trainFile\",\n          children: trainFileLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"trainFile\",\n          name: \"trainFile\",\n          onChange: e => handleTrainFileChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"targetString\",\n          children: columnNames.length > 0 ? \"Select the target column\" : \"Upload your train.csv file first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), columnNames.length > 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"targetString\",\n          name: \"targetString\",\n          value: targetString,\n          onChange: e => handleTargetStringChange(e),\n          children: columnNames.map(columnName => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: columnName,\n            children: columnName\n          }, columnName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"targetString\",\n          name: \"targetString\",\n          value: targetString,\n          onChange: e => handleTargetStringChange(e),\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), mode === \"developer\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"maxRuntimeSecs\",\n            children: \"Max Runtime Secs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Default is 3600\",\n            type: \"number\",\n            id: \"maxRuntimeSecs\",\n            name: \"maxRuntimeSecs\",\n            value: maxRuntimeSecs,\n            onChange: e => handleMaxRuntimeSecsChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"maxModels\",\n            children: \"Max Models \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Default is None\",\n            type: \"number\",\n            id: \"maxModels\",\n            name: \"maxModels\",\n            value: maxModels,\n            onChange: e => handleMaxModelsChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nfolds\",\n            children: \"Nfolds \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Default is -1\",\n            type: \"number\",\n            id: \"nfolds\",\n            name: \"nfolds\",\n            value: nfolds,\n            onChange: e => handleNfoldsChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"seed\",\n            children: \"Seed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Default is None\",\n            type: \"number\",\n            id: \"seed\",\n            name: \"seed\",\n            value: seed,\n            onChange: e => handleSeedChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"algos\",\n            children: \"Algorithms \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            name: \"algos\",\n            id: \"algos\",\n            onChange: handleAlgoSelectChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"GLM\",\n              children: \"GLM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DeepLearning\",\n              children: \"DeepLearning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DRF\",\n              children: \"DRF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"GBM\",\n              children: \"GBM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"XGBoost\",\n              children: \"XGBoost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"StackedEnsemble\",\n              children: \"StackedEnsemble\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Train\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this), mode === \"developer\" && columnInsights.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.columnInsights,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Column Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: insight.name === targetString ? styles.highlight : '',\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Unique Values\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Null Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mean\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, insight.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: columnInsights.map(insight => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: insight.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: insight.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: insight.unique_values\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: insight.null_count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: insight.min\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: insight.max\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: insight.mean.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)]\n            }, insight.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), trainLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSection,\n        children: /*#__PURE__*/_jsxDEV(PacmanLoader, {\n          color: \"#4A90E2\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), leaderboardData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leaderboardContainer,\n      children: [/*#__PURE__*/_jsxDEV(Leaderboard, {\n        data: leaderboardData,\n        selectedModels: selectedModels,\n        setSelectedModels: setSelectedModels,\n        onSave: saveSelectedModels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), saveLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSection,\n        children: /*#__PURE__*/_jsxDEV(RingLoader, {\n          color: \"#4A90E2\",\n          size: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.predictSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePredictSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"predictFile\",\n          children: predictFileLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"predictFile\",\n          name: \"predictFile\",\n          onChange: e => handlePredictFileChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), predictLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingSection,\n        children: /*#__PURE__*/_jsxDEV(PropagateLoader, {\n          color: \"#4A90E2\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoMLPipeline, \"EtSoCVeTHFM1kxzFacjyf79b9Ms=\");\n_c = AutoMLPipeline;\nexport default AutoMLPipeline;\nvar _c;\n$RefreshReg$(_c, \"AutoMLPipeline\");","map":{"version":3,"names":["React","useState","styles","Leaderboard","PacmanLoader","PropagateLoader","RingLoader","Papa","jsxDEV","_jsxDEV","Fragment","_Fragment","AutoMLPipeline","_s","trainFile","setTrainFile","trainFileLabel","setTrainFileLabel","predictFile","setPredictFile","predictFileLabel","setPredictFileLabel","targetString","setTargetString","maxRuntimeSecs","setMaxRuntimeSecs","maxModels","setMaxModels","nfolds","setNfolds","seed","setSeed","selectedAlgos","setSelectedAlgos","leaderboardData","setLeaderboardData","selectedModels","setSelectedModels","mode","setMode","trainLoading","setTrainLoading","predictLoading","setpredictLoading","saveLoading","setSaveLoading","columnNames","setColumnNames","columnInsights","setColumnInsights","analyzeColumns","data","insights","reduce","acc","row","Object","entries","forEach","_ref","key","value","type","unique_values","Set","null_count","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","sum","isNaN","numValue","Math","add","result","map","_ref2","name","Array","from","size","mean","handleModeChange","e","target","handleTrainFileChange","files","fileReader","FileReader","onload","event","fileContent","parsedData","parse","header","firstLine","split","columns","readAsText","handlePredictFileChange","handleTargetStringChange","handleMaxRuntimeSecsChange","handleMaxModelsChange","handleNfoldsChange","handleSeedChange","handleAlgoSelectChange","options","selected","i","length","push","handleSubmit","preventDefault","formData","FormData","append","JSON","stringify","response","fetch","method","body","json","parsedJsonData","keys","model_id","model","prop","handlePredictSubmit","saveSelectedModels","headers","ok","console","log","alert","error","className","AutoMLPipeline__container","children","modeSelector","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","trainSection","onSubmit","columnName","disabled","placeholder","multiple","insight","highlight","toFixed","loadingSection","color","leaderboardContainer","onSave","predictSection","_c","$RefreshReg$"],"sources":["/Users/basakonder/Desktop/automl/frontend-react/src/components/AutoMLPipeline.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from './AutoMLPipeline.module.css';\nimport Leaderboard from './Leaderboard';\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport Papa from \"papaparse\";\n\n\nconst AutoMLPipeline = () => {\n  const [trainFile, setTrainFile] = useState(null);\n  const [trainFileLabel, setTrainFileLabel] = useState(\"Choose file\");\n  const [predictFile, setPredictFile] = useState(null);\n  const [predictFileLabel, setPredictFileLabel] = useState(\"Choose file\");\n  const [targetString, setTargetString] = useState(\"\");\n  const [maxRuntimeSecs, setMaxRuntimeSecs] = useState(\"\");\n  const [maxModels, setMaxModels] = useState(\"\");\n  const [nfolds, setNfolds] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const [selectedAlgos, setSelectedAlgos] = useState([]);\n  const [leaderboardData, setLeaderboardData] = useState(null);\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [mode, setMode] = useState(\"user\");\n  const [trainLoading, setTrainLoading] = useState(false);\n  const [predictLoading, setpredictLoading] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [columnNames, setColumnNames] = useState([]);\n  const [columnInsights, setColumnInsights] = useState([]);\n\n\n  const analyzeColumns = (data) => {\n    const insights = data.reduce(\n      (acc, row) => {\n        Object.entries(row).forEach(([key, value]) => {\n          if (!acc[key]) {\n            acc[key] = {\n              type: null,\n              unique_values: new Set(),\n              null_count: 0,\n              min: Number.POSITIVE_INFINITY,\n              max: Number.NEGATIVE_INFINITY,\n              sum: 0,\n            };\n          }\n  \n          if (value === \"\" || value === null) {\n            acc[key].null_count += 1;\n          } else {\n            if (!isNaN(value)) {\n              const numValue = Number(value);\n              acc[key].min = Math.min(acc[key].min, numValue);\n              acc[key].max = Math.max(acc[key].max, numValue);\n              acc[key].sum += numValue;\n            }\n  \n            acc[key].unique_values.add(value);\n          }\n        });\n  \n        return acc;\n      },\n      {}\n    );\n  \n    const result = Object.entries(insights).map(([name, data]) => ({\n      name,\n      type: isNaN(Array.from(data.unique_values)[0]) ? \"string\" : \"number\",\n      unique_values: data.unique_values.size,\n      null_count: data.null_count,\n      min: data.min === Number.POSITIVE_INFINITY ? null : data.min,\n      max: data.max === Number.NEGATIVE_INFINITY ? null : data.max,\n      mean: data.sum / (data.unique_values.size - data.null_count),\n    }));\n  \n    setColumnInsights(result);\n  };\n\n  \n  const handleModeChange = (e) => {\n    setMode(e.target.value);\n  };\n\n  const handleTrainFileChange = (e) => {\n    setTrainFile(e.target.files[0]);\n    setTrainFileLabel(e.target.files[0].name);\n    const fileReader = new FileReader();\n    fileReader.onload = async (event) => {\n    const fileContent = event.target.result;\n\n    // Extract the column names\n    const parsedData = Papa.parse(fileContent, { header: true });\n    const firstLine = fileContent.split(\"\\n\")[0];\n    const columns = firstLine.split(\",\");\n\n    // Update the column names state\n    setColumnNames(columns);\n    analyzeColumns(parsedData.data);\n  };\n  fileReader.readAsText(e.target.files[0]);\n  };\n\n  const handlePredictFileChange = (e) => {\n    setPredictFile(e.target.files[0]);\n    setPredictFileLabel(e.target.files[0].name);\n  };\n\n  const handleTargetStringChange = (e) => {\n    setTargetString(e.target.value);\n  };\n\n  const handleMaxRuntimeSecsChange = (e) => {\n    setMaxRuntimeSecs(e.target.value);\n  };\n\n  const handleMaxModelsChange = (e) => {\n    setMaxModels(e.target.value);\n  };\n\n  const handleNfoldsChange = (e) => {\n    setNfolds(e.target.value);\n  };\n\n  const handleSeedChange = (e) => {\n    setSeed(e.target.value);\n  };\n\n  const handleAlgoSelectChange = (e) => {\n    const options = e.target.options;\n    const selected = [];\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        selected.push(options[i].value);\n      }\n    }\n    setSelectedAlgos(selected);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setTrainLoading(true);\n\n    const formData = new FormData();\n    formData.append(\"file\", trainFile);\n    formData.append(\"target_string\", targetString);\n    if (maxRuntimeSecs) formData.append(\"max_runtime_secs\", maxRuntimeSecs);\n    if (maxModels) formData.append(\"max_models\", maxModels);\n    if (nfolds) formData.append(\"nfolds\", nfolds);\n    if (seed) formData.append(\"seed\", seed);\n    if (selectedAlgos.length != 0) formData.append(\"include_algos\", JSON.stringify(selectedAlgos));\n\n    const response = await fetch(\"http://localhost:8000/train\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const data = await response.json();\n    const parsedData = JSON.parse(data);\n    const parsedJsonData = Object.keys(JSON.parse(data).model_id).map((key) => {\n      const model = {};\n      for (const prop in JSON.parse(data)) {\n        model[prop] = JSON.parse(data)[prop][key];\n      }\n      return model;\n    });\n    \n    setLeaderboardData(parsedJsonData);    \n    setTrainLoading(false);\n  };\n\n  const handlePredictSubmit = async (e) => {\n    e.preventDefault();\n    setpredictLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", predictFile);\n\n    const response = await fetch(\"http://localhost:8000/predict\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const data = await response.json();\n    setpredictLoading(false);\n    // Process the prediction data as desired\n  };\n\n  const saveSelectedModels = async () => {\n    setSaveLoading(true);\n    const response = await fetch(\"http://localhost:8000/save_models\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(selectedModels),\n    });\n\n    if (response.ok) {\n      console.log(\"Selected models saved successfully\");\n      alert(\"Selected models are saved successfully\");\n      setLeaderboardData(null);\n      setSelectedModels([]);\n    } else {\n      console.error(\"Error saving selected models\");\n    }\n    setSaveLoading(false);\n  };\n  return (\n    <div className={styles.AutoMLPipeline__container}>\n      <div className={styles.modeSelector}>\n        <label htmlFor=\"mode\">Mode:</label>\n        <select id=\"mode\" value={mode} onChange={handleModeChange}>\n          <option value=\"user\">User Mode</option>\n          <option value=\"developer\">Developer Mode</option>\n        </select>\n      </div>\n\n      <div className={styles.trainSection}>\n      <h2>Train</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"trainFile\">{trainFileLabel}</label>\n        <input\n          type=\"file\"\n          id=\"trainFile\"\n          name=\"trainFile\"\n          onChange={(e) => handleTrainFileChange          (e)}\n          />\n          \n          <label htmlFor=\"targetString\">\n            {columnNames.length > 0\n              ? \"Select the target column\"\n              : \"Upload your train.csv file first\"}\n          </label>\n          {columnNames.length > 0 ? (\n          <select\n            id=\"targetString\"\n            name=\"targetString\"\n            value={targetString}\n            onChange={(e) => handleTargetStringChange(e)}\n          >\n            {columnNames.map((columnName) => (\n              <option key={columnName} value={columnName}>\n                {columnName}\n              </option>\n            ))}\n          </select>\n        ) : (\n          <input\n            type=\"text\"\n            id=\"targetString\"\n            name=\"targetString\"\n            value={targetString}\n            onChange={(e) => handleTargetStringChange(e)}\n            disabled\n          />\n        )}\n          {mode === \"developer\" && (\n            <>            \n            <br></br>\n            <br></br>\n            <label htmlFor=\"maxRuntimeSecs\">Max Runtime Secs</label>\n            <input\n            placeholder=\"Default is 3600\"\n            type=\"number\"\n            id=\"maxRuntimeSecs\"\n            name=\"maxRuntimeSecs\"\n            value={maxRuntimeSecs}\n            onChange={(e) => handleMaxRuntimeSecsChange(e)}\n            />\n            <br></br>\n            <label htmlFor=\"maxModels\">Max Models </label>\n            <input\n              placeholder=\"Default is None\"\n              type=\"number\"\n              id=\"maxModels\"\n              name=\"maxModels\"\n              value={maxModels}\n              onChange={(e) => handleMaxModelsChange(e)}\n            />\n            <br></br>\n            <label htmlFor=\"nfolds\">Nfolds </label>\n            <input\n              placeholder=\"Default is -1\"\n              type=\"number\"\n              id=\"nfolds\"\n              name=\"nfolds\"\n              value={nfolds}\n              onChange={(e) => handleNfoldsChange(e)}\n            />\n            <br></br>\n            <label htmlFor=\"seed\">Seed </label>\n            <input\n              placeholder=\"Default is None\"\n              type=\"number\"\n              id=\"seed\"\n              name=\"seed\"\n              value={seed}\n              onChange={(e) => handleSeedChange(e)}\n            />\n            <br></br>\n            <label htmlFor=\"algos\">Algorithms </label>\n            <select multiple name=\"algos\" id=\"algos\" onChange={handleAlgoSelectChange}>\n              <option value=\"GLM\">GLM</option>\n              <option value=\"DeepLearning\">DeepLearning</option>\n              <option value=\"DRF\">DRF</option>\n              <option value=\"GBM\">GBM</option>\n              <option value=\"XGBoost\">XGBoost</option>\n              <option value=\"StackedEnsemble\">StackedEnsemble</option>\n            </select>\n            <br></br>\n            </>\n          )}\n          <button type=\"submit\">Train</button>\n        </form>\n        {mode === \"developer\" && columnInsights.length > 0 && (\n        <div className={styles.columnInsights}>\n          <h3>Column Insights</h3>\n          <table>\n            <thead>\n            <tr key={insight.name} className={insight.name === targetString ? styles.highlight : ''}>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Unique Values</th>\n                <th>Null Count</th>\n                <th>Min</th>\n                <th>Max</th>\n                <th>Mean</th>\n              </tr>\n            </thead>\n            <tbody>\n              {columnInsights.map((insight) => (\n                <tr key={insight.name}>\n                  <td>{insight.name}</td>\n                  <td>{insight.type}</td>\n                  <td>{insight.unique_values}</td>\n                  <td>{insight.null_count}</td>\n                  <td>{insight.min}</td>\n                  <td>{insight.max}</td>\n                  <td>{insight.mean.toFixed(2)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n        {trainLoading && (\n        <div className={styles.loadingSection}>\n          <PacmanLoader color=\"#4A90E2\" size={50} />\n        </div>\n      )}\n      </div>\n\n      {leaderboardData && (\n        <div className={styles.leaderboardContainer}>\n          <Leaderboard\n            data={leaderboardData}\n            selectedModels={selectedModels}\n            setSelectedModels={setSelectedModels}\n            onSave={saveSelectedModels}\n          />\n        {saveLoading && (\n        <div className={styles.loadingSection}>\n          <RingLoader color=\"#4A90E2\" size={100} />\n        </div>\n      )}\n        </div>\n      )}\n\n      <div className={styles.predictSection}>\n        <h2>Predict</h2>\n        <form onSubmit={handlePredictSubmit}>\n          <label htmlFor=\"predictFile\">{predictFileLabel}</label>\n          <input\n            type=\"file\"\n            id=\"predictFile\"\n            name=\"predictFile\"\n            onChange={(e) => handlePredictFileChange(e)}\n          />\n          <button type=\"submit\">Predict</button>\n        </form>\n        {predictLoading && (\n        <div className={styles.loadingSection}>\n          <PropagateLoader color=\"#4A90E2\" size={50} />\n        </div>\n      )}\n      </div>\n    </div>\n  );\n};\n\nexport default AutoMLPipeline;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}