{"ast":null,"code":"var _jsxFileName = \"/Users/basakonder/Desktop/automl/frontend-react/src/components/Leaderboard.js\",\n  _s = $RefreshSig$();\n// Leaderboard.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = _ref => {\n  _s();\n  let {\n    data,\n    selectedModels,\n    setSelectedModels,\n    onSave\n  } = _ref;\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  console.log(data);\n  const handleModelSelect = modelId => {\n    if (selectedModels.includes(modelId)) {\n      setSelectedModels(selectedModels.filter(id => id !== modelId));\n    } else {\n      setSelectedModels([...selectedModels, modelId]);\n    }\n  };\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const sortedData = React.useMemo(() => {\n    const dataCopy = [...data];\n    if (sortConfig.key !== null) {\n      dataCopy.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return dataCopy;\n  }, [data, sortConfig]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('model_id'),\n            children: \"Model ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('mean_residual_deviance'),\n            children: \"Mean Residual Deviance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('rmse'),\n            children: \"RMSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('mse'),\n            children: \"MSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('mae'),\n            children: \"MAE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('rmsle'),\n            children: \"RMSLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.isArray(sortedData) && sortedData.map((model, index) => (console.log(model), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedModels.includes(model.model_id),\n              onChange: () => handleModelSelect(model.model_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.model_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.mean_residual_deviance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.rmse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.mse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.mae\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.rmsle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, model.model_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"Save Selected Models\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"damCieyg69Ho6CefWhK7cx2YyH4=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Leaderboard","_ref","_s","data","selectedModels","setSelectedModels","onSave","sortConfig","setSortConfig","useState","key","direction","console","log","handleModelSelect","modelId","includes","filter","id","handleSort","sortedData","useMemo","dataCopy","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","map","model","index","type","checked","model_id","onChange","mean_residual_deviance","rmse","mse","mae","rmsle","_c","$RefreshReg$"],"sources":["/Users/basakonder/Desktop/automl/frontend-react/src/components/Leaderboard.js"],"sourcesContent":["// Leaderboard.js\nimport React from 'react';\n\nconst Leaderboard = ({ data, selectedModels, setSelectedModels, onSave }) => {\n\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\n  console.log(data);\n  const handleModelSelect = (modelId) => {\n    if (selectedModels.includes(modelId)) {\n      setSelectedModels(selectedModels.filter((id) => id !== modelId));\n    } else {\n      setSelectedModels([...selectedModels, modelId]);\n    }\n  };\n\n  const handleSort = (key) => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedData = React.useMemo(() => {\n    const dataCopy = [...data];\n    if (sortConfig.key !== null) {\n      dataCopy.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return dataCopy;\n  }, [data, sortConfig]);\n  return (\n    <div>\n      <table>\n        {/* Render table header */}\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th onClick={() => handleSort('model_id')}>Model ID</th>\n            <th onClick={() => handleSort('mean_residual_deviance')}>Mean Residual Deviance</th>\n            <th onClick={() => handleSort('rmse')}>RMSE</th>\n            <th onClick={() => handleSort('mse')}>MSE</th>\n            <th onClick={() => handleSort('mae')}>MAE</th>\n            <th onClick={() => handleSort('rmsle')}>RMSLE</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Array.isArray(sortedData) &&\n            sortedData.map((model, index) => (\n              console.log(model),\n              <tr key={model.model_id}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedModels.includes(model.model_id)}\n                    onChange={() => handleModelSelect(model.model_id)}\n                  />\n                </td>\n                <td>{model.model_id}</td>\n                <td>{model.mean_residual_deviance}</td>\n                <td>{model.rmse}</td>\n                <td>{model.mse}</td>\n                <td>{model.mae}</td>\n                <td>{model.rmsle}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <button onClick={onSave}>Save Selected Models</button>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}