{"ast":null,"code":"var _jsxFileName = \"/Users/basakonder/Desktop/automl/frontend-react/src/components/Leaderboard.js\",\n  _s = $RefreshSig$();\n// Leaderboard.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedModels, setSelectedModels] = useState([]);\n  const handleSave = () => {\n    console.log('Selected Models:', selectedModels);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Leaderboard, {\n      data: parsedJsonData,\n      selectedModels: selectedModels,\n      setSelectedModels: setSelectedModels,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gPQg8nU5DAXw6Ev1G6WmzW0vplI=\");\n_c = App;\nexport default App;\n\n// const Leaderboard = ({ data, selectedModels, setSelectedModels, onSave }) => {\n//   console.log(data);\n//   const handleModelSelect = (modelId) => {\n//     if (selectedModels.includes(modelId)) {\n//       setSelectedModels(selectedModels.filter((id) => id !== modelId));\n//     } else {\n//       setSelectedModels([...selectedModels, modelId]);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <table>\n//         {/* Render table header */}\n//         <thead>\n//           <tr>\n//             <th>Select</th>\n//             <th>Model ID</th>\n//             <th>Mean Residual Deviance</th>\n//             <th>RMSE</th>\n//             <th>MSE</th>\n//             <th>MAE</th>\n//             <th>RMSLE</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {Array.isArray(data) &&\n//             data.map((model, index) => (\n//               console.log(model),\n//               console.log(index),\n//               <tr key={model.model_id}>\n//                 <td>\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={selectedModels.includes(model.model_id)}\n//                     onChange={() => handleModelSelect(model.model_id)}\n//                   />\n//                 </td>\n//                 <td>{model.model_id}</td>\n//                 <td>{model.mean_residual_deviance}</td>\n//                 <td>{model.rmse}</td>\n//                 <td>{model.mse}</td>\n//                 <td>{model.mae}</td>\n//                 <td>{model.rmsle}</td>\n//               </tr>\n//             ))}\n//         </tbody>\n//       </table>\n//       <button onClick={onSave}>Save Selected Models</button>\n//     </div>\n//   );\n// };\n\n// export default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","selectedModels","setSelectedModels","useState","handleSave","console","log","className","children","Leaderboard","data","parsedJsonData","onSave","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/basakonder/Desktop/automl/frontend-react/src/components/Leaderboard.js"],"sourcesContent":["// Leaderboard.js\nimport React from 'react';\nfunction App() {\n  const [selectedModels, setSelectedModels] = useState([]);\n\n  const handleSave = () => {\n    console.log('Selected Models:', selectedModels);\n  };\n\n  return (\n    <div className=\"App\">\n      <Leaderboard\n        data={parsedJsonData}\n        selectedModels={selectedModels}\n        setSelectedModels={setSelectedModels}\n        onSave={handleSave}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n// const Leaderboard = ({ data, selectedModels, setSelectedModels, onSave }) => {\n//   console.log(data);\n//   const handleModelSelect = (modelId) => {\n//     if (selectedModels.includes(modelId)) {\n//       setSelectedModels(selectedModels.filter((id) => id !== modelId));\n//     } else {\n//       setSelectedModels([...selectedModels, modelId]);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <table>\n//         {/* Render table header */}\n//         <thead>\n//           <tr>\n//             <th>Select</th>\n//             <th>Model ID</th>\n//             <th>Mean Residual Deviance</th>\n//             <th>RMSE</th>\n//             <th>MSE</th>\n//             <th>MAE</th>\n//             <th>RMSLE</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {Array.isArray(data) &&\n//             data.map((model, index) => (\n//               console.log(model),\n//               console.log(index),\n//               <tr key={model.model_id}>\n//                 <td>\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={selectedModels.includes(model.model_id)}\n//                     onChange={() => handleModelSelect(model.model_id)}\n//                   />\n//                 </td>\n//                 <td>{model.model_id}</td>\n//                 <td>{model.mean_residual_deviance}</td>\n//                 <td>{model.rmse}</td>\n//                 <td>{model.mse}</td>\n//                 <td>{model.mae}</td>\n//                 <td>{model.rmsle}</td>\n//               </tr>\n//             ))}\n//         </tbody>\n//       </table>\n//       <button onClick={onSave}>Save Selected Models</button>\n//     </div>\n//   );\n// };\n\n// export default Leaderboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,cAAc,CAAC;EACjD,CAAC;EAED,oBACEH,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBV,OAAA,CAACW,WAAW;MACVC,IAAI,EAAEC,cAAe;MACrBV,cAAc,EAAEA,cAAe;MAC/BC,iBAAiB,EAAEA,iBAAkB;MACrCU,MAAM,EAAER;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CAjBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAmBZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}