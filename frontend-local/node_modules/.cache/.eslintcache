[{"/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/index.js":"1","/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/App.js":"2","/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/reportWebVitals.js":"3","/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/components/AutoMLPipeline.js":"4","/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/components/Leaderboard.js":"5","/Users/basakonder/Desktop/automl/frontend-react/src/index.js":"6","/Users/basakonder/Desktop/automl/frontend-react/src/App.js":"7","/Users/basakonder/Desktop/automl/frontend-react/src/reportWebVitals.js":"8","/Users/basakonder/Desktop/automl/frontend-react/src/components/AutoMLPipeline.js":"9","/Users/basakonder/Desktop/automl/frontend-react/src/components/Leaderboard.js":"10"},{"size":535,"mtime":1683138845297,"results":"11","hashOfConfig":"12"},{"size":224,"mtime":1683138909409,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1683138845297,"results":"14","hashOfConfig":"12"},{"size":6283,"mtime":1683183569076,"results":"15","hashOfConfig":"12"},{"size":1036,"mtime":1683183619979,"results":"16","hashOfConfig":"12"},{"size":535,"mtime":1683138845297,"results":"17","hashOfConfig":"18"},{"size":224,"mtime":1683190481859,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1683138845297,"results":"20","hashOfConfig":"18"},{"size":12311,"mtime":1683206593505,"results":"21","hashOfConfig":"18"},{"size":3072,"mtime":1683204942583,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i4bssd",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"kzwszz",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},"/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/index.js",[],[],"/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/App.js",[],[],"/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/reportWebVitals.js",[],[],"/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/components/AutoMLPipeline.js",["55","56","57","58","59"],[],"/Users/basakonder/Desktop/Bitirme/automl/frontend-react/src/components/Leaderboard.js",[],[],"/Users/basakonder/Desktop/automl/frontend-react/src/index.js",[],[],[],"/Users/basakonder/Desktop/automl/frontend-react/src/App.js",[],[],"/Users/basakonder/Desktop/automl/frontend-react/src/reportWebVitals.js",[],[],"/Users/basakonder/Desktop/automl/frontend-react/src/components/AutoMLPipeline.js",["60","61","62"],[],"/Users/basakonder/Desktop/automl/frontend-react/src/components/Leaderboard.js",["63","64"],[],"// Leaderboard.js\nimport React, { useState, useMemo } from 'react';\n\nconst Leaderboard = ({ data, selectedModels, setSelectedModels, onSave }) => {\n\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\n  console.log(data);\n  const handleModelSelect = (modelId) => {\n    if (selectedModels.includes(modelId)) {\n      setSelectedModels(selectedModels.filter((id) => id !== modelId));\n    } else {\n      setSelectedModels([...selectedModels, modelId]);\n    }\n  };\n\n  const handleSort = (key) => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const SortArrow = () => (\n    <span>{'â†“'}</span>\n  );\n\n  const sortedData = React.useMemo(() => {\n    const dataCopy = [...data];\n    if (sortConfig.key !== null) {\n      dataCopy.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return dataCopy;\n  }, [data, sortConfig]);\n  return (\n    <div>\n      <table>\n        {/* Render table header */}\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th onClick={() => handleSort('model_id')}> Model ID  <SortArrow/> </th>\n            <th onClick={() => handleSort('mean_residual_deviance')}>Mean Residual Deviance <SortArrow/> </th>\n            <th onClick={() => handleSort('rmse')}>RMSE  <SortArrow/> </th>\n            <th onClick={() => handleSort('mse')}>MSE  <SortArrow/> </th>\n            <th onClick={() => handleSort('mae')}>MAE  <SortArrow/> </th>\n            <th onClick={() => handleSort('rmsle')}>RMSLE <SortArrow/> </th>\n            <th onClick={() => handleSort('training_time_ms')}>Training Time as ms <SortArrow/> </th>\n            <th onClick={() => handleSort('predict_time_per_row_ms')}>Predict Time per Row as ms <SortArrow/> </th>\n          </tr>\n        </thead>\n        <tbody>\n          {Array.isArray(sortedData) &&\n            sortedData.map((model, index) => (\n              console.log(model),\n              <tr key={model.model_id}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedModels.includes(model.model_id)}\n                    onChange={() => handleModelSelect(model.model_id)}\n                  />\n                </td>\n                <td>{model.model_id}</td>\n                <td>{model.mean_residual_deviance}</td>\n                <td>{model.rmse}</td>\n                <td>{model.mse}</td>\n                <td>{model.mae}</td>\n                <td>{model.rmsle}</td>\n                <td>{model.training_time_ms}</td>\n                <td>{model.predict_time_per_row_ms}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <button onClick={onSave}>Save Selected Models</button>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n",{"ruleId":"65","severity":1,"message":"66","line":16,"column":10,"nodeType":"67","messageId":"68","endLine":16,"endColumn":21},{"ruleId":"65","severity":1,"message":"69","line":16,"column":23,"nodeType":"67","messageId":"68","endLine":16,"endColumn":37},{"ruleId":"65","severity":1,"message":"70","line":17,"column":10,"nodeType":"67","messageId":"68","endLine":17,"endColumn":23},{"ruleId":"65","severity":1,"message":"71","line":17,"column":25,"nodeType":"67","messageId":"68","endLine":17,"endColumn":41},{"ruleId":"65","severity":1,"message":"72","line":94,"column":11,"nodeType":"67","messageId":"68","endLine":94,"endColumn":15},{"ruleId":"73","severity":1,"message":"74","line":149,"column":30,"nodeType":"75","messageId":"76","endLine":149,"endColumn":32},{"ruleId":"65","severity":1,"message":"77","line":157,"column":11,"nodeType":"67","messageId":"68","endLine":157,"endColumn":21},{"ruleId":"65","severity":1,"message":"72","line":181,"column":11,"nodeType":"67","messageId":"68","endLine":181,"endColumn":15},{"ruleId":"65","severity":1,"message":"78","line":2,"column":27,"nodeType":"67","messageId":"68","endLine":2,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":63,"column":33,"nodeType":"81","messageId":"82","endLine":63,"endColumn":34},"no-unused-vars","'trainStatus' is assigned a value but never used.","Identifier","unusedVar","'setTrainStatus' is assigned a value but never used.","'predictStatus' is assigned a value but never used.","'setPredictStatus' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'parsedData' is assigned a value but never used.","'useMemo' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression"]